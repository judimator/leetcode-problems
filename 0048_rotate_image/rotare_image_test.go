package rotate_image

import (
	"reflect"
	"testing"
)

type TestData struct {
	matrix [][]int
	output [][]int
}

var tests = []TestData{
	{
		[][]int{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}},
		[][]int{{7, 4, 1}, {8, 5, 2}, {9, 6, 3}},
	},
	{
		[][]int{{5, 1, 9, 11}, {2, 4, 8, 10}, {13, 3, 6, 7}, {15, 14, 12, 16}},
		[][]int{{15, 13, 2, 5}, {14, 3, 4, 1}, {12, 6, 8, 9}, {16, 7, 10, 11}},
	},
	{
		[][]int{
			{126, 96, 126, 0, 42, 128, 3, 0, 111, -1, 66, 37},
			{123, 57, 130, 22, -1, 12, 53, 40, 106, 57, 51, 20},
			{112, 104, 80, 12, 137, 116, 88, 136, 85, 71, 137, 129},
			{56, 13, 2, 41, 13, 70, 79, 137, 0, 83, 32, 16},
			{96, 103, 74, 75, 17, 142, 112, 2, 104, 49, 15, 98},
			{22, 105, 91, 109, 49, 102, 111, 123, 116, 114, 21, 131},
			{57, 117, 141, 59, 57, 31, 92, 26, 135, 23, 102, 25},
			{39, 72, 44, 0, 122, 61, 115, 18, 39, 79, 128, 89},
			{38, 112, 69, 12, 83, 91, 16, 14, 82, 14, 90, 140},
			{62, 39, 40, 70, 80, -1, 112, 120, 88, 14, 137, 84},
			{76, 109, 103, 116, 45, 104, 78, 101, 73, 21, 130, 29},
			{129, 3, 44, 68, 18, 135, 66, 98, 32, 107, 25, 129},
		},
		[][]int{
			{129, 76, 62, 38, 39, 57, 22, 96, 56, 112, 123, 126},
			{3, 109, 39, 112, 72, 117, 105, 103, 13, 104, 57, 96},
			{44, 103, 40, 69, 44, 141, 91, 74, 2, 80, 130, 126},
			{68, 116, 70, 12, 0, 59, 109, 75, 41, 12, 22, 0},
			{18, 45, 80, 83, 122, 57, 49, 17, 13, 137, -1, 42},
			{135, 104, -1, 91, 61, 31, 102, 142, 70, 116, 12, 128},
			{66, 78, 112, 16, 115, 92, 111, 112, 79, 88, 53, 3},
			{98, 101, 120, 14, 18, 26, 123, 2, 137, 136, 40, 0},
			{32, 73, 88, 82, 39, 135, 116, 104, 0, 85, 106, 111},
			{107, 21, 14, 14, 79, 23, 114, 49, 83, 71, 57, -1},
			{25, 130, 137, 90, 128, 102, 21, 15, 32, 137, 51, 66},
			{129, 29, 84, 140, 89, 25, 131, 98, 16, 129, 20, 37},
		},
	},
}

func TestRotate(t *testing.T) {
	for _, data := range tests {
		if rotate(data.matrix); !reflect.DeepEqual(data.matrix, data.output) {
			t.Error("Failed, rotate")
		}
	}
}
